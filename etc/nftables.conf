#!/usr/sbin/nft -f

flush ruleset

table inet filter {
  set ssh_whitelist {
    type ipv4_addr
    flags timeout
  }

  chain input {
    type filter hook input priority 0; policy drop;
    
    # Allow loopback
    iif "lo" accept
    iif != "lo" ip daddr 127.0.0.0/8 counter drop
    iif != "lo" ip6 daddr ::1/128 counter drop

    # Drop invalid packets
    ct state invalid counter drop

    # Allow established/related
    ct state established,related accept

    # ICMPv4 (ping, MTU, unreachable)
    icmp type { echo-request, destination-unreachable, time-exceeded, parameter-problem } limit rate 1/second burst 5 packets accept
    icmp type echo-request counter accept
    
    # ICMPv6 (NDP + essential types)
    icmpv6 type { destination-unreachable, time-exceeded, parameter-problem, 
                  packet-too-big, echo-request, nd-neighbor-solicit, 
                  nd-neighbor-advert, nd-router-solicit, nd-router-advert } accept

    # SSH protection (rate limit + dynamic whitelist)
    tcp dport 22 ip saddr @ssh_whitelist accept
    tcp dport 22 ct state new limit rate 5/minute burst 10 packets add @ssh_whitelist { ip saddr timeout 1h } accept

    # HTTP/HTTPS
    tcp dport { 80, 443 } accept

    # Log and drop suspicious packets
    tcp flags & (fin|syn) == (fin|syn) counter log prefix "Invalid SYN+FIN: " drop
    tcp flags & (syn|rst) == (syn|rst) counter log prefix "Invalid SYN+RST: " drop
    
    # Log dropped packets (rate-limited)
    log prefix "Dropped: " group 0 limit rate 10/minute
    counter drop
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
  }

  chain output {
    type filter hook output priority 0; policy accept;
  }
}
